getMyCurrentPoints=function(me){
source_https=function(u, unlink.tmp.certs = FALSE) {
require(RCurl)
if(!file.exists("cacert.pem")) {
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile = "cacert.pem")
}
script=getURL(u, followlocation=TRUE, cainfo= "cacert.pem")
if(unlink.tmp.certs) unlink("cacert.pem")
eval(parse(text=script), envir=.GlobalEnv)
}

source_https("https://raw.githubusercontent.com/roseph/252-Redesign/master/loadPoints.R")

course=unique(df$class)
sc.pairs=unique(df[,c("student", "class")])
lookup.class=new.env()
for(i in 1:nrow(sc.pairs)){
lookup.class[[sc.pairs$student[i]]]=sc.pairs$class[i]
}

my.course=which(course==lookup.class[[me]])
if(nrow(df[df$student=="ALL" & df$class==course[my.course],]) > 0) {
current.all= sum(as.integer(df[df$student=="ALL" &
df$class==course[my.course],]$points))
} else {
current.all=0
}

for(this.course in 1:length(my.course)){
current.totals= aggregate(as.integer(df[df$class==course[my.course],]$points),
by=list(df[df$class==course[my.course],]$student), FUN=sum)
current.totals$x=current.totals$x+current.all
writeLines(paste("Leaderboard for",course[my.course]), con=stdout(), sep="\n")
print(current.totals[rev(order(current.totals$x)),], quote=FALSE, row.names=FALSE)
}

for(s in me) {
my.stuff=rbind(df[df$student=="ALL" &
df$class==course[my.course],],df[df$student==s,])
my.points=sum(as.integer(my.stuff$points))
writeLines(paste(s,"-- you currently have", my.points,
"points! The tasks you have completed are:"), con=stdout(), sep="\n\n")
print(my.stuff, quote=FALSE, row.names=FALSE)
}
}